<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>ÏãùÎãπ ÏÉÅÏÑ∏ÌéòÏù¥ÏßÄ</title>
        <%- include('include/head') %>
        <link rel="stylesheet" href="/static/css/restDetail.css" />
        <script
            type="text/javascript"
            src="https://openapi.map.naver.com/openapi/v3/maps.js?ncpClientId=czcpt81ovb"
        ></script>
        <script
            type="text/javascript"
            src="https://oapi.map.naver.com/openapi/v3/maps.js?ncpClientId=czcpt81ovb&submodules=geocoder"
        ></script>
        <script src="https://kit.fontawesome.com/9ff27f4d50.js" crossorigin="anonymous"></script>
    </head>
    <body>
        <%- include('include/header'), {isLogin: isLogin, user: user} %>
        <main>
            <div class="rest">
                <div class="restImg">
                    <img src="/static/images/<%= restaurant.rest_index %>.png" alt="ÏãùÎãπ Ïù¥ÎØ∏ÏßÄ" />
                </div>
                <div class="restInfo">
                    <div class="restTitle">
                        <div class="restNameCate">
                            <span style="font-size: 30px; font-weight: bold"
                                ><%= restaurant.rest_name %></span
                            >
                            <% for (category of categoryList) { %>
                            <span style="margin-left: 20px; font-size: 20px; color: gray"
                                ><%= category.category_name %></span
                            >
                            <% } %>
                        </div>
                        <div class="restRankLike">
                            <span class="reviewCount">Î¶¨Î∑∞ Ïàò: <%=reviewList.length%></span>
                            <!-- Î≥ÑÏ†ê -->
                            <i class="fa-solid fa-star fa-2xl" style="color: #ffd43b"></i>
                            <% let rating = 0%>
                            <!-- Î¶¨Î∑∞Í∞Ä ÏûàÏùÑ Îïå -->
                            <% if (reviewList.length > 0) { %> <% for (review of reviewList) { %> <%
                            rating += review.review_rating %> <% } %>
                            <!-- ÌèâÍ∑†, ÏÜåÏàòÏ†ê Ï≤´ Î≤àÏß∏ ÏûêÎ¶¨ÍπåÏßÄ Î∞òÏò¨Î¶º -->
                            <span class="rating"
                                ><%= (rating / reviewList.length).toFixed(1) %></span
                            >
                            <% } else { %>
                            <span class="rating">0</span>
                            <% } %>
                            <!-- Ï±ÑÏö¥ ÌïòÌä∏ fa-regular -> fa-solid -->

                            <% if (!likeCheckResult) { %>
                            <!-- Î°úÍ∑∏Ïù∏ x, Î°úÍ∑∏Ïù∏ o Ï¢ãÏïÑÏöî x -->
                            <i
                                id="emptyHeart"
                                class="fa-regular fa-heart fa-2xl"
                                style="color: #ff0000"
                                onclick="likePlus('<%= restaurant.rest_index%>', '<%= isLogin %>')"
                            ></i>
                            <% } else { %>
                            <!-- Î°úÍ∑∏Ïù∏ o Ï¢ãÏïÑÏöî o -->
                            <i
                                id="filledHeart"
                                class="fa-solid fa-heart fa-2xl"
                                style="color: #ff0000"
                                onclick="likePlus('<%= restaurant.rest_index%>', '<%= isLogin %>')"
                            ></i>
                            <% } %>
                        </div>
                    </div>
                    <hr />
                    <div class="restDes">
                        <p><%= restaurant.rest_desc%></p>
                        <br />
                        <div class="otherInfo">
                            <div class="timeAndNum">
                                ‚è∞ ÏòÅÏóÖÏãúÍ∞Ñ: <%= restaurant.rest_time%><br /><br />
                                üìû Î≤àÌò∏: <%= restaurant.rest_number%><br /><br />
                            </div>
                            <div class="menu">
                                üìú ÎåÄÌëúÎ©îÎâ¥:
                                <!-- Î©îÎâ¥ Ï†ïÎ≥¥Í∞Ä ÏûàÏùÑ Îïå -->
                                <% if (menuList.length > 0) { %>
                                <ul>
                                    <% for (menu of menuList) { %>
                                    <li>
                                        <span><%=menu.menu%></span> ------------- <%=menu.price%>Ïõê
                                    </li>
                                    <% } %>
                                </ul>
                                <% } %>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- ÏßÄÎèÑ -->
            <div class="maps">
                <div class="address">Ï£ºÏÜå: <%= restaurant.rest_address%></div>
                <div id="map"></div>
            </div>
            <script>
                const address = "<%=restaurant.rest_address%>";
                let lat, lng;
                // console.log(address);
                function geo() {
                    return new Promise((resolve, reject) => {
                        naver.maps.Service.geocode(
                            {
                                query: address,
                            },
                            function (status, response) {
                                if (status !== naver.maps.Service.Status.OK) {
                                    reject("Ï£ºÏÜå -> ÏúÑÎèÑ,Í≤ΩÎèÑ Î≥ÄÌôò error");
                                }
                                let result = response.v2; // Í≤ÄÏÉâ Í≤∞Í≥ºÏùò Ïª®ÌÖåÏù¥ÎÑà
                                let items = result.addresses; // Í≤ÄÏÉâ Í≤∞Í≥ºÏùò Î∞∞Ïó¥
                                lat = items[0].x;
                                lng = items[0].y;
                                resolve(); // PromiseÎ•º Ïù¥Ïö©ÌïòÏó¨ ÎπÑÎèôÍ∏∞ ÎèôÏûëÏù¥ ÏôÑÎ£åÎê®ÏùÑ ÏïåÎ¶º
                            }
                        );
                    });
                }
                function map() {
                    // console.log("lat, lng >> ",lat, lng);

                    // ÏßÄÎèÑ ÏúÑÏπò(x:Í≤ΩÎèÑ, y:ÏúÑÎèÑ), Ï§å, Ïª®Ìä∏Î°§ ÏÑ§Ï†ï
                    let mapOptions = {
                        center: new naver.maps.LatLng(lng, lat),
                        zoom: 18,
                        scaleControl: false,
                        mapDataControl: false,
                        zoomControl: true,
                    };

                    // mapOptionsÏùò ÏòµÏÖòÏúºÎ°ú map ÏÉùÏÑ±
                    let map = new naver.maps.Map("map", mapOptions);

                    // ÏßÄÎèÑ ÎßàÏª§ ÏÑ§Ï†ï
                    let marker = new naver.maps.Marker({
                        position: new naver.maps.LatLng(lng, lat),
                        map: map,
                    });
                }
                async function geoAndMap() {
                    await geo();
                    map();
                }

                geoAndMap();
            </script>

            <div class="reviewAll">
                <h2 class="reviewTitle">Î¶¨Î∑∞</h2>
                <div class="reviews">
                    <% let reviewCount = 0; %>
                    <!-- Î¶¨Î∑∞ Í∞úÏàò 1Í∞ú -->
                    <% if (reviewList.length === 1) {%> <% for (let i = 0; i < reviewList.length;
                    i++) { %>
                    <div class="review">
                        <div class="reviewTitle">
                            <i class="fa-regular fa-user fa-xl"></i>
                            <span><%= reviewList[i].User.nickname%> | </span>
                            <% const originalDate = new Date(reviewList[i].createdAt); const
                            formattedDate = originalDate.toLocaleString('ko-KR', {timeZone:
                            'Asia/Seoul', hour12: false}); %>
                            <span><%=formattedDate %></span>
                            <span class="reviewRating">
                                <% for(let j = 0; j < reviewList[i].review_rating; j++) { %>
                                <i class="fa-solid fa-star fa-xl" style="color: #ffd43b"></i>
                                <% } %>
                            </span>
                        </div>
                        <hr />
                        <p><%= reviewList[i].review_content%></p>
                    </div>
                    <% } %> <% } else if(reviewList.length >= 2) { %>
                    <!-- Î¶¨Î∑∞ Í∞úÏàò 2Í∞ú Ïù¥ÏÉÅ -->
                    <% for (let i = 0; i < 2; i++) { %>
                    <div class="review">
                        <div class="reviewTitle">
                            <i class="fa-regular fa-user fa-xl"></i>
                            <span><%= reviewList[i].User.nickname%> | </span>
                            <% const originalDate = new Date(reviewList[i].createdAt); const
                            formattedDate = originalDate.toLocaleString('ko-KR', {timeZone:
                            'Asia/Seoul', hour12: false}); %>
                            <span><%=formattedDate %></span>
                            <span class="reviewRating">
                                <% for(let j = 0; j < reviewList[i].review_rating; j++) { %>
                                <i class="fa-solid fa-star fa-xl" style="color: #ffd43b"></i>
                                <% } %>
                            </span>
                        </div>
                        <hr />
                        <p><%= reviewList[i].review_content%></p>
                    </div>
                    <% } %> <% if (reviewList.length > 2) { %>
                    <button
                        id="reviewPlusBtn"
                        type="button"
                        onclick="reviewPlus('<%= restaurant.rest_index%>', this)"
                    >
                        Î¶¨Î∑∞ ÎçîÎ≥¥Í∏∞ +
                    </button>
                    <% } %> <% } %>
                </div>
                <hr />
                <div class="createReview">
                    <div class="rating">
                        <span>
                            <%for (let i=1; i<=5; i++) { %>
                            <i
                                id="ratingCount<%= i %>"
                                class="fa-regular fa-star fa-2xl"
                                style="color: #ffd43b"
                                onclick="reviewRating('<%= restaurant.rest_index%>', this)"
                            ></i>
                            <%} %>
                        </span>
                    </div>
                    <textarea
                        maxlength="255"
                        class="createReviewContent"
                        name="create_review"
                        cols="92"
                        rows="3"
                        placeholder="ÎÇ¥Ïö©ÏùÑ ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî."
                    ></textarea>
                    <button
                        type="button"
                        onclick="createReview('<%= restaurant.rest_index %>', '<%= isLogin %>')"
                    >
                        Î¶¨Î∑∞ Îì±Î°ùÌïòÍ∏∞
                    </button>
                </div>
            </div>
        </main>
        <%- include('include/footer') %>
    </body>

    <script>
        function likePlus(restIndex, isLogin) {
            // Î°úÍ∑∏Ïù∏ ÎêòÏñ¥ÏûàÏùÑ Îïå
            // console.log("Î°úÍ∑∏Ïù∏ ÏÉÅÌÉú >> ",isLogin)
            if (isLogin === "true") {
                const filledHeart = document.querySelector("#filledHeart");
                // console.log(filledHeart)
                // Ï±ÑÏõåÏßÑ ÌïòÌä∏ Ï¢ãÏïÑÏöî o) ÎùºÎ©¥
                if (filledHeart) {
                    // Ï±ÑÏõåÏßÑ ÌïòÌä∏ fa-solid, Îπà ÌïòÌä∏ fa-regular
                    // Ï¢ãÏïÑÏöî ÏÇ≠Ï†ú ÌõÑ ÎπàÌïòÌä∏
                    axios({
                        url: `/restaurantDetail/${restIndex}/deleteLike`,
                        method: "delete",
                        data: { restIndex: restIndex },
                    })
                        .then((response) => {
                            filledHeart.id = "emptyHeart";
                            filledHeart.classList.remove("fa-solid");
                            filledHeart.classList.add("fa-regular");
                            // console.log(response)
                            alert(response.data.message);
                        })
                        .catch((err) => {
                            alert("Ï¢ãÏïÑÏöî ÏÇ≠Ï†ú Ïã§Ìå®");
                            console.log("err", err);
                        });
                } else {
                    // Îπà ÌïòÌä∏ (Î°úÍ∑∏Ïù∏ o Ï¢ãÏïÑÏöî x) ÎùºÎ©¥
                    const emptyHeart = document.querySelector("#emptyHeart");
                    // console.log(emptyHeart);
                    // Ï¢ãÏïÑÏöî Îì±Î°ù ÌõÑ Ï±ÑÏõåÏßÑ ÌïòÌä∏
                    axios({
                        url: `/restaurantDetail/${restIndex}/createLike`,
                        method: "post",
                        data: { restIndex: restIndex },
                    })
                        .then((response) => {
                            emptyHeart.id = "filledHeart";
                            emptyHeart.classList.remove("fa-regular");
                            emptyHeart.classList.add("fa-solid");
                            // console.log(response)
                            alert(response.data.message);
                        })
                        .catch((err) => {
                            alert("Ï¢ãÏïÑÏöî Îì±Î°ù Ïã§Ìå®");
                            console.log("err", err);
                        });
                }
            } else {
                // Î°úÍ∑∏Ïù∏ ÏïàÎêòÏñ¥ÏûàÏùÑ Îïå
                return alert("Ï¢ãÏïÑÏöî Îì±Î°ùÏùÄ Î°úÍ∑∏Ïù∏Ïù¥ Îêú ÏÉÅÌÉúÏó¨Ïïº Ìï©ÎãàÎã§. Î°úÍ∑∏Ïù∏ÏùÑ Ìï¥Ï£ºÏÑ∏Ïöî!");
            }
        }

        // ÎçîÎ≥¥Í∏∞ Ï≤òÏùå Î∞úÏÉù Ïãú reviewÍ∞úÏàòÎäî 2Í∞ú, ÌòÑÏû¨ Î≥¥Ïó¨ÏßÄÎäî Î¶¨Î∑∞ Í∞úÏàò
        let reviewCount = 2;

        function reviewPlus(restIndex) {
            axios({
                url: `/restaurantDetail/${restIndex}/reviewPlus`,
                method: "get",
                params: { restIndex: restIndex },
            })
                .then((response) => {
                    // console.log(response.data.reviewList);
                    const reviewList = response.data.reviewList;
                    // Î¶¨Î∑∞Í∞Ä ÎçîÎ≥¥Í∏∞ Ìï† Î¶¨Î∑∞Í∞Ä ÏóÜÏùÑ Îïå
                    if (reviewCount === reviewList.length) {
                        return alert("Î¶¨Î∑∞Í∞Ä Îçî Ïù¥ÏÉÅ ÏóÜÏäµÎãàÎã§!");
                    }
                    // console.log(reviewList);
                    // ÎçîÎ≥¥Í∏∞ Î¶¨Î∑∞Í∞Ä 1Í∞ú ÎÇ®ÏïòÏùÑ Îïå
                    if (reviewList.length - reviewCount === 1) {
                        for (let i = reviewCount; i < reviewCount + 1; i++) {
                            // console.log(reviewList[i].review_content);
                            // Î¶¨Î∑∞ Ï†ÑÏ≤¥ Í∞êÏã∏Îäî div
                            const plusReview = document.createElement("div");
                            plusReview.classList.add("review");

                            // Î¶¨Î∑∞ ÌÉÄÏù¥ÌãÄ divÏôÄ ÏΩòÌÖêÏ∏† p
                            const reviewTitle = document.createElement("div");
                            reviewTitle.classList.add("reviewTitle");
                            const hr = document.createElement("hr");
                            const content = document.createElement("p");
                            content.textContent = reviewList[i].review_content;
                            plusReview.append(reviewTitle, hr, content);

                            // Ïú†Ï†ÄÏù¥ÎØ∏ÏßÄ, ÎãâÎÑ§ÏûÑ, ÏÉùÏÑ±Ïùº, Î≥ÑÏ†ê
                            const userImage = document.createElement("i");
                            const userNickname = document.createElement("span");
                            const createAt = document.createElement("span");
                            const rating = document.createElement("span"); // reviewRating ÌÅ¥ÎûòÏä§

                            // <i class="fa-regular fa-user fa-xl"></i> Ïú†Ï†Ä Ïù¥ÎØ∏ÏßÄ
                            userImage.classList.add("fa-regular");
                            userImage.classList.add("fa-user");
                            userImage.classList.add("fa-xl");
                            userNickname.textContent = `${reviewList[i].User.nickname} | `;
                            const originalDate = new Date(reviewList[i].createdAt);
                            const formattedDate = originalDate.toLocaleString("ko-KR", {
                                timeZone: "Asia/Seoul",
                                hour12: false,
                            });
                            createAt.textContent = formattedDate;
                            rating.classList.add("reviewRating");
                            for (let j = 0; j < reviewList[i].review_rating; j++) {
                                const ratingOne = document.createElement("i");
                                ratingOne.classList.add("fa-solid");
                                ratingOne.classList.add("fa-star");
                                ratingOne.classList.add("fa-xl");
                                ratingOne.style.color = "#FFD43B";
                                rating.append(ratingOne);
                            }
                            reviewTitle.append(userImage, userNickname, createAt, rating);
                            const reviews = document.querySelector(".reviews");
                            const reviewPlusBtn = document.querySelector("#reviewPlusBtn");
                            // console.log(reviewPlusBtn)
                            reviews.insertBefore(plusReview, reviewPlusBtn);
                        }
                        reviewCount += 1;
                        // 2Í∞úÏù¥ÏÉÅ ÎÇ®ÏïòÏùÑ Îïå
                    } else {
                        // 3Î≤àÏß∏ Î¶¨Î∑∞ Î∂ÄÌÑ∞ 2Í∞úÏ∂îÍ∞Ä
                        for (let i = reviewCount; i < reviewCount + 2; i++) {
                            // console.log(reviewList[i].review_content);
                            // Î¶¨Î∑∞ Ï†ÑÏ≤¥ Í∞êÏã∏Îäî div
                            const plusReview = document.createElement("div");
                            plusReview.classList.add("review");

                            // Î¶¨Î∑∞ ÌÉÄÏù¥ÌãÄ divÏôÄ ÏΩòÌÖêÏ∏† p
                            const reviewTitle = document.createElement("div");
                            reviewTitle.classList.add("reviewTitle");
                            const hr = document.createElement("hr");
                            const content = document.createElement("p");
                            content.textContent = reviewList[i].review_content;
                            plusReview.append(reviewTitle, hr, content);

                            // Ïú†Ï†ÄÏù¥ÎØ∏ÏßÄ, ÎãâÎÑ§ÏûÑ, ÏÉùÏÑ±Ïùº, Î≥ÑÏ†ê
                            const userImage = document.createElement("i");
                            const userNickname = document.createElement("span");
                            const createAt = document.createElement("span");
                            const rating = document.createElement("span"); // reviewRating ÌÅ¥ÎûòÏä§

                            // <i class="fa-regular fa-user fa-xl"></i> Ïú†Ï†Ä Ïù¥ÎØ∏ÏßÄ
                            userImage.classList.add("fa-regular");
                            userImage.classList.add("fa-user");
                            userImage.classList.add("fa-xl");
                            userNickname.textContent = `${reviewList[i].User.nickname} | `;
                            const originalDate = new Date(reviewList[i].createdAt);
                            const formattedDate = originalDate.toLocaleString("ko-KR", {
                                timeZone: "Asia/Seoul",
                                hour12: false,
                            });
                            createAt.textContent = formattedDate;
                            rating.classList.add("reviewRating");
                            for (let j = 0; j < reviewList[i].review_rating; j++) {
                                const ratingOne = document.createElement("i");
                                ratingOne.classList.add("fa-solid");
                                ratingOne.classList.add("fa-star");
                                ratingOne.classList.add("fa-xl");
                                ratingOne.style.color = "#FFD43B";
                                rating.append(ratingOne);
                            }
                            reviewTitle.append(userImage, userNickname, createAt, rating);
                            const reviews = document.querySelector(".reviews");
                            const reviewPlusBtn = document.querySelector("#reviewPlusBtn");
                            // console.log(reviewPlusBtn)
                            reviews.insertBefore(plusReview, reviewPlusBtn);
                        }
                        reviewCount += 2;
                    }
                })
                .catch((err) => {
                    alert("Î¶¨Î∑∞ ÎçîÎ≥¥Í∏∞ Ïã§Ìå®");
                    console.log("err", err);
                });
        }

        // ÌòÑÏû¨ ÏÑ†ÌÉùÌïú Î≥ÑÏ†ê Ïàò
        let selectRating = 0;
        function reviewRating(restIndex, click) {
            console.log("ÌÅ¥Î¶≠Ïù¥ Î∞úÏÉùÌïú ÏöîÏÜåÏùò id Í∞í:", click.id);
            selectRating = Number(click.id[click.id.length - 1]);
            console.log("ÏÑ†ÌÉùÌïú Î≥ÑÏ†ê Ïàò >", selectRating);

            // ÏÑ†ÌÉùÌïú Î≥ÑÏ†êÎ≥¥Îã§ Îçî Ï±ÑÏõêÏßÑ Î≥Ñ Îπà Î≥ÑÎ°ú
            for (let i = selectRating + 1; i <= 5; i++) {
                const ratingChange = document.querySelector(`#ratingCount${i}`);
                if (ratingChange.classList.contains("fa-solid")) {
                    ratingChange.classList.remove("fa-solid");
                    ratingChange.classList.add("fa-regular");
                }
            }
            // ÏÑ†ÌÉùÌïú Î≥ÑÎßåÌÅº Îπà Î≥Ñ Ï±ÑÏõåÏ£ºÍ∏∞
            for (let i = 1; i <= selectRating; i++) {
                const ratingChange = document.querySelector(`#ratingCount${i}`);
                if (ratingChange.classList.contains("fa-regular")) {
                    ratingChange.classList.remove("fa-regular");
                    ratingChange.classList.add("fa-solid");
                }
            }

            // for(let i = 1; i <= createRating; i++) {
            //     const ratingChange = document.querySelector(`#ratingCount${i}`);
            //     ratingChange.classList.remove("fa-regular");
            //     ratingChange.classList.add("fa-solid");
            // }
        }

        async function createReview(restIndex, isLogin) {
            if (isLogin === "true") {
                // console.log("review Îì±Î°ù");
                const contentArea = document.querySelector(".createReviewContent");
                const content = contentArea.value;
                if (selectRating === 0) {
                    return alert("Î≥ÑÏ†êÏùÑ ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî!");
                }

                if (content === "") {
                    return alert("Î¶¨Î∑∞ ÎÇ¥Ïö©ÏùÑ ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî!");
                }

                if (confirm("Î¶¨Î∑∞Î•º Îì±Î°ùÌïòÏãúÍ≤†ÏäµÎãàÍπå?")) {
                    // Î¶¨Î∑∞ Îì±Î°ù ÏöîÏ≤≠
                    await axios({
                        url: `/restaurantDetail/${restIndex}/createReview`,
                        method: "post",
                        data: { restIndex: restIndex, rating: selectRating, content: content },
                    })
                        .then((response) => {
                            alert(response.data.message);
                        })
                        .catch((err) => {
                            alert("Î¶¨Î∑∞ Îì±Î°ù Ïã§Ìå® err");
                            console.log("err", err);
                        });

                    // ÌòÑÏû¨ ÌéòÏù¥ÏßÄÎ•º ÏÉàÎ°úÍ≥†Ïπ®
                    location.reload();
                }
            } else {
                alert("Î¶¨Î∑∞Î•º Îì±Î°ùÌïòÎ†§Î©¥ Î°úÍ∑∏Ïù∏Ïù¥ Îêú ÏÉÅÌÉúÏó¨Ïïº Ìï©ÎãàÎã§. Î°úÍ∑∏Ïù∏ÏùÑ Ìï¥Ï£ºÏÑ∏Ïöî!");
            }
        }
    </script>
</html>
