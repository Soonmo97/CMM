<header>
    <div class="wrapper">
        <div class="headerLogo">
            <a href="/?category=모든식당">
                <img
                    id="headerImg"
                    src="/static/images/CMM-circle.png"
                    alt=""
                    style="width: auto; height: 150px"
                />
            </a>
            <div class="typing"><h2 class="typingTxt"></h2></div>
        </div>
        <div>
            <a href="/roulette">
                <img src="" alt="" style="height: auto; width: 50px" />
            </a>
        </div>
        <div class="searchResponse" style="z-index: 999; margin-right: -3rem">
            <div class="search" style="width: 500px">
                <div
                    class="collapse navbar-collapse d-flex justify-content-center"
                    id="navbarSupportedContent"
                >
                    <div class="d-flex" role="search" style="width: 500px">
                        <input
                            id="searchInput"
                            class="searchStyle"
                            type="search"
                            placeholder="search"
                            aria-label="Search"
                        />

                        <button
                            class="searchBtn"
                            type="button"
                            id="searchButton"
                            style="border: none; background-color: #ffde59; border-radius: 25px"
                        >
                            <img
                                src="https://s3.ap-northeast-2.amazonaws.com/cdn.wecode.co.kr/icon/search.png"
                            />
                        </button>
                    </div>
                </div>
            </div>
            <script>
                // 검색 버튼에 이벤트 리스너 추가
                document.getElementById("searchButton").addEventListener("click", searchKeyword);

                // 키워드로 검색하여 테이블을 채우는 함수
                async function searchKeyword() {
                    try {
                        const keyword = document.getElementById("searchInput").value.trim(); // 입력값의 앞뒤 공백 제거
                        if (!keyword) {
                            return; // 검색어가 없으면 함수 종료
                        }
                        document.location.href = `/search?keyword=${keyword}`;
                    } catch (error) {
                        console.error("데이터 가져오기 오류:", error);
                    }
                }

                // 엔터 키 입력 시 검색 실행
                document
                    .getElementById("searchInput")
                    .addEventListener("keypress", function (event) {
                        if (event.key === "Enter") {
                            searchKeyword();
                        }
                    });
            </script>
            <!-- 타이핑 효과 -->
            <script>
                const $typingTxt = document.querySelector(".typing .typingTxt");

                // 글자 모음 - 개행문자(\n)로 줄바꿈
                const letters = ["창동역 맛집 모음"];

                // 글자 입력 속도
                const speed = 100;
                let i = 0;

                // 줄바꿈을 위한 <br> 치환
                const changeLineBreak = (letter) => {
                    return letter.map((typingTxt) => (typingTxt === "\n" ? "<br>" : typingTxt));
                };

                // 타이핑 효과
                const typing = async () => {
                    // 기존코드에서 개행치환코드 추가
                    const letter = changeLineBreak(letters[i].split(""));

                    while (letter.length) {
                        await wait(speed);
                        $typingTxt.innerHTML += letter.shift();
                    }

                    // 잠시 대기
                    await wait(800);

                    // 지우는 효과
                    remove();
                };

                // 글자 지우는 효과
                const remove = async () => {
                    // 기존코드에서 개행치환코드 추가
                    const letter = changeLineBreak(letters[i].split(""));

                    while (letter.length) {
                        await wait(speed);

                        letter.pop();
                        $typingTxt.innerHTML = letter.join("");
                    }

                    // 다음 순서의 글자로 지정, 타이핑 함수 다시 실행
                    i = !letters[i + 1] ? 0 : i + 1;
                    typing();
                };

                // 딜레이 기능 ( 마이크로초 )
                function wait(ms) {
                    return new Promise((res) => setTimeout(res, ms));
                }

                // 초기 실행
                setTimeout(typing, 1500);
            </script>

            <br />
            <div>
                <nav class="menu" style="flex: 0 0 auto; margin-top: -15px">
                    <ul>
                        <li id="menuHome"><a href="/?category=모든식당">홈</a></li>
                        <li id="menu1">
                            <a href="/search/category?category=한식">한식</a>
                        </li>
                        <li id="menu2">
                            <a href="/search/category?category=일식">일식</a>
                        </li>
                        <li id="menu3">
                            <a href="/search/category?category=양식">양식</a>
                        </li>
                        <li id="menu4">
                            <a href="/search/category?category=중식">중식</a>
                        </li>
                        <li id="menu5">
                            <a href="/search/category?category=디저트">디저트</a>
                        </li>
                        <li id="menu6">
                            <a href="/search/category?category=기타">기타</a>
                        </li>
                        <li id="roulette">
                            <a href="/roulette"
                                ><img
                                    src="/static/images/roulette0.png"
                                    id="rouletteImg"
                                    alt=""
                                    style="width: 45px; height: auto"
                                />
                            </a>
                        </li>
                    </ul>
                </nav>
            </div>
        </div>

        <div class="InfoResponse">
            <div class="buttons">
                <!-- 로그인 유무에 따른 헤더 변경 -->
                <%if (isLogin) { %>
                <div>
                    <div class="welcomeResponse" style="right: 25%">
                        <p
                            class="signBtn"
                            style="
                                background-color: white;
                                text-align: center;
                                border-radius: 25px;
                                padding: 5px 0;
                                font-weight: 600;
                            "
                        >
                            <i class="fa-regular fa-user fa-xl"></i>&nbsp;&nbsp;<%= user %>님
                            환영합니다.
                        </p>
                    </div>

                    <form name="form_logout" action="/form/logout" method="post">
                        <div>
                            <button
                                id="logoutBtn"
                                class="signBtn"
                                type="submit"
                                style="font-weight: 600"
                            >
                                로그아웃
                            </button>

                            <button
                                type="button"
                                class="signBtn"
                                id="menu"
                                onclick="window.location.href = '/mypage/likeList';"
                                style="font-weight: 600"
                            >
                                마이페이지
                            </button>

                            <a
                                href="/suggestion/list?page=1"
                                class="signBtn"
                                style="
                                    text-decoration: none;
                                    color: black;
                                    font-weight: 600;
                                    padding: 1px 6px;
                                "
                                >건의사항</a
                            >
                        </div>
                    </form>
                </div>
                <% } else { %>
                <button id="signupBtn" class="signBtn" style="font-weight: 600">회원가입</button>
                <button id="loginBtn" class="signBtn" style="font-weight: 600">로그인</button>
                <a
                    href="/suggestion/list?page=1"
                    class="signBtn"
                    style="text-decoration: none; color: black; font-weight: 600; padding: 0 5px"
                    >건의사항</a
                >
                <% } %>
                <br />
            </div>
        </div>
    </div>

    <!-- 로그인 팝업창 -->
    <div id="loginModal" class="modal">
        <div class="modal-content">
            <h2 class="modal-title">로 그 인</h2>
            <div>
                <img src="/static/images/CMM-circle.png" width="150px" height="200px" />
            </div>
            <a href=""><span class="signupLabel" id="closeModalBtn">닫기</span></a>

            <form name="form_info" action="/index" method="post">
                <input type="hidden" name="nickname" />
            </form>

            <form id="modal_login" action="/form/login" method="post">
                <!-- 아이디 -->
                <div>
                    <h4>
                        <label for="id">아이디</label>
                    </h4>
                    <span class="box intId">
                        <input type="text" name="id" class="int" maxlength="20" />
                    </span>
                    <!-- <span class="error_next_box"></span> -->
                </div>

                <!-- 비밀번호 -->
                <div>
                    <h4>
                        <label for="pswd1">비밀번호</label>
                    </h4>
                    <span class="box intPw">
                        <input type="password" name="pw" class="int" maxlength="20" />
                    </span>
                    <span class="error_next_box"></span>
                </div>

                <!-- 로그인-->
                <div class="btnArea">
                    <button type="submit" id="btnLogin">
                        <span>로그인</span>
                    </button>
                </div>

                <div class="searchUser">
                    <a href="/user/searchId" target="_blank" onclick="openSearch()">아이디 찾기</a>
                    <a href="/user/searchPw" target="_blank" onclick="openSearch()"
                        >비밀번호 찾기</a
                    >
                </div>
            </form>
        </div>
    </div>

    <!-- 찾기 onclick -->
    <script>
        function openSearch() {
            event.preventDefault();

            var width = 600;
            var height = 500;

            // 새 창 열기
            var newWindow = window.open(
                event.target.href,
                "_blank",
                "width=" + width + ",height=" + height
            );

            // 새 창의 크기 조절
            newWindow.resizeTo(width, height);

            // 새 창을 화면 중앙으로 이동
            var left = (window.screen.width - width) / 2;
            var top = (window.screen.height - height) / 2;
            newWindow.moveTo(left, top);
        }
    </script>

    <!-- 회원가입 팝업창 -->
    <div id="signupModal" class="modal">
        <div class="modal-content">
            <h2 class="modal-title">회 원 가 입</h2>
            <div class="imgLogo">
                <img src="/static/images/CMM-circle.png" width="150px" height="200px" />
            </div>

            <a href=""><span class="signupLabel" id="closeLikeBtn">닫기</span></a>
            <form id="modal_register" name="modal_register">
                <!-- 아이디 -->
                <div>
                    <h4>
                        <label for="id">아이디</label>
                    </h4>
                    <span class="box intId">
                        <input
                            type="text"
                            name="id"
                            id="inputId"
                            class="int"
                            maxlength="20"
                            onkeydown="inputIdCk()"
                            required
                        />
                        <!-- 타입을 btn에서 input으로 수정 -->
                        <span class="stepbutton">
                            <button id="btnCheckId" onclick="idCheck()">중복확인</button>
                            <input
                                type="hidden"
                                name="idDuplication"
                                id="idDuplication"
                                value="idUncheck"
                            />
                        </span>
                    </span>
                    <span class="error_next_box"></span>
                </div>

                <!-- 비밀번호 -->
                <div>
                    <h4>
                        <label for="pswd1">비밀번호</label>
                    </h4>
                    <span class="box intPw">
                        <input
                            type="password"
                            name="pw"
                            class="int"
                            maxlength="20"
                            id="pw"
                            required
                        />
                        <span id="alertTxt">사용불가</span>
                    </span>
                    <span class="error_next_box"></span>
                </div>

                <!-- 비밀번호 확인 -->
                <div>
                    <h4>
                        <label for="pswd2">비밀번호 재확인</label>
                    </h4>
                    <span class="box intPwCheck">
                        <input
                            type="password"
                            name="pwCheck"
                            class="int"
                            maxlength="20"
                            id="pwCk"
                        />
                    </span>
                    <span class="error_next_box"></span>
                </div>

                <!-- 닉네임 -->
                <div>
                    <h4>
                        <label for="name">닉네임</label>
                    </h4>
                    <span class="box intName">
                        <input
                            type="text"
                            name="nickname"
                            class="int"
                            maxlength="20"
                            placeholder="7글자 이하로 작성해주세요."
                            required
                        />
                        <span class="error_next_box"></span>
                    </span>
                </div>

                <!-- 이메일 -->
                <!-- <form id="checkEmail" action="/checkEmail" method="POST"></form> -->
                <!-- form 안에 form 작성불가 -->
                <div>
                    <h4>
                        <label for="email">이메일</label>
                    </h4>
                    <span class="box intEmail">
                        <input
                            type="email"
                            name="email"
                            id="email"
                            class="int"
                            maxlength="100"
                            required
                        />
                        <span class="stepbutton">
                            <button type="button" id="btnReset" onclick="resetBtn()">리셋</button>
                            <button type="submit" id="btnCheckCodeSend" onclick="emailCode()">
                                확인코드전송
                            </button></span
                        >
                    </span>
                    <span class="error_next_box">이메일 주소를 다시 확인해주세요.</span>
                </div>

                <!-- 이메일 확인 -->
                <div>
                    <h4>
                        <label for="email">인증번호 확인</label>
                    </h4>
                    <span class="box intName">
                        <input
                            type="text"
                            id="emailChk"
                            name="emailChk"
                            class="int"
                            maxlength="20"
                            oninput="inputCodeCk()"
                            required
                        />
                        <span class="stepbutton">
                            <button type="button" id="btnCheckCode" onclick="btnEmailCk()">
                                확인
                            </button>
                            <input
                                type="hidden"
                                name="codeDuplication"
                                id="codeDuplication"
                                value="codeUncheck"
                            />
                        </span>
                    </span>
                    <span class="error_next_box"></span>
                </div>
                <!-- 회원가입-->
                <div class="btnArea">
                    <button type="submit" id="btnJoin" onclick="btnRegister()">가입하기</button>
                </div>
            </form>
        </div>
    </div>

    <!-- 비밀번호 재확인 부분 -->
    <script>
        let pw = document.getElementById("pw");
        let pwCk = document.getElementById("pwCk");

        function validatePassword() {
            if (pw.value != pwCk.value) {
                pwCk.setCustomValidity("비밀번호가 같지 않습니다.");
            } else {
                pwCk.setCustomValidity("");
            }
        }
        pw.onchange = validatePassword;
        pwCk.onkeyup = validatePassword;
    </script>

    <!-- 아이디 중복화면 검사 -->
    <script>
        // 아이디 중복체크 화면 열기
        function idCheck() {
            window.name = "parentForm";
            window.open(
                "/user/idCheckForm",
                "chkForm",
                "width=500, height=350, , top=300, left=500 + leftresizable=no, scrollbars=no"
            );
        }

        // 중복체크 후 다시 새로운 아이디를 입력했을 때 다시 중복체크 하도록 함
        function inputIdCk() {
            document.modal_register.idDuplication.value = "idUncheck";
        }
    </script>

    <!-- 이메일 확인 코드 전송 -->

    <script>
        // 간단한 이메일 형식 유효성 검사
        function validateEmail(email) {
            const re =
                /^([\w-]+(?:\.[\w-]+)*)@((?:[\w-]+\.)*\w[\w-]{0,66})\.([a-z]{2,6}(?:\.[a-z]{2})?)$/i;
            return re.test(email);
        }

        function resetBtn() {
            document.getElementById("email").value = "";
            document.getElementById("email").removeAttribute("readonly");
        }

        function emailCode() {
            const emailInput = document.getElementById("email");
            const emailValue = emailInput.value;

            if (!validateEmail(emailValue)) {
                alert("올바른 이메일 형식이 아닙니다.");
                return;
            }

            axios({
                method: "POST",
                url: "/form/sendCode",
                data: {
                    email: emailValue,
                },
            })
                .then((response) => {
                    // console.log("res 작동 확인", response.data);
                    if (response.data.ok) {
                        emailInput.setAttribute("readonly", true);
                        alert("메일 전송에 성공하였습니다.");
                    }
                    if (response.data.check) {
                        alert("중복된 이메일 입니다.");
                        email.value = "";
                    }
                    if (response.data.ok === false) {
                        alert("메일 전송에 실패하였습니다.");
                    }
                })

                .catch((err) => {
                    console.error(err);
                    alert("서버 오류가 발생했습니다.");
                });
        }
    </script>

    <!-- 이메일 코드 확인 -->
    <script>
        function btnEmailCk(callback) {
            const emailChk = document.getElementById("emailChk");
            const codeValue = emailChk.value;

            axios({
                method: "POST",
                url: "/form/checkCode",
                data: {
                    codeValue: codeValue,
                },
            })
                .then((response) => {
                    if (response.data.ok) {
                        alert("인증번호가 일치합니다.");
                        // 인증번호 일치시 코드값을 변경하여 회원가입 가능하도록 설정
                        document.getElementById("codeDuplication").value = "btnEmailCk";
                        if (callback) {
                            callback(true);
                        }
                    } else {
                        alert("인증번호가 일치하지 않습니다.");
                        emailChk.value = "";
                        if (callback) {
                            callback(false);
                        }
                    }
                })
                .catch((error) => {
                    console.error(error);
                    if (callback) {
                        callback(false);
                    }
                });
        }

        document.getElementById("modal_register").addEventListener("submit", function (event) {
            event.preventDefault();

            const form = document.forms["modal_register"];

            function inputCodeCk() {
                document.modal_register.codeDuplication.value = "codeUncheck";
            }

            // 중복확인, 이메일 인증 확인
            btnEmailCk(function (success) {
                if (!success) {
                    alert("인증번호 확인을 해주세요.");
                    return false;
                }

                if (form.idDuplication.value != "idCheck") {
                    alert("아이디 중복체크를 해주세요.");
                    return false;
                }

                // 회원가입 진행
                axios({
                    method: "POST",
                    url: "/form/register",
                    data: {
                        id: form.id.value,
                        pw: form.pw.value,
                        nickname: form.nickname.value,
                        email: form.email.value,
                    },
                })
                    .then((result) => {
                        console.log(result);
                        if (result) {
                            alert("회원가입 성공!");
                            document.location.href = "/";
                        } else {
                            alert("회원가입 실패");
                        }
                    })
                    .catch((err) => {
                        console.error(err);
                        res.status(500).send("회원가입 실패");
                    });
            });
        });
    </script>

    <!-- 어두운 오버레이 -->
    <div id="overlay"></div>

    <div class="searchWrapper0">
        <div class="searchWrapper">
            <div class="inputHolder">
                <input type="text" class="searchInput" placeholder="Type to search" />
                <button class="searchIcon" onclick="searchToggle(this, event);">
                    <span></span>
                </button>
            </div>
            <span class="close" onclick="searchToggle(this, event);"></span>
        </div>
    </div>

    <script>
        function searchToggle(obj, evt) {
            var container = obj.closest(".searchWrapper");
            if (!container.classList.contains("active")) {
                container.classList.add("active");
                evt.preventDefault();
            } else if (container.classList.contains("active") && !obj.closest(".inputHolder")) {
                container.classList.remove("active");
                // clear input
                container.querySelector(".searchInput").value = "";
            }
        }
    </script>

    <script>
        // 회원가입 버튼 클릭 이벤트 처리
        document.getElementById("signupBtn").addEventListener("click", function () {
            // 팝업창과 어두운 오버레이 표시
            console.log("테스트");
            document.getElementById("signupModal").style.display = "block";
            document.getElementById("overlay").style.display = "block";
        });

        // 모달 닫기 버튼 클릭 이벤트 처리
        document.getElementById("closeModalBtn").addEventListener("click", function () {
            // 팝업창과 어두운 오버레이 숨기기
            document.getElementById("signupModal").style.display = "none";
            document.getElementById("overlay").style.display = "none";
        });

        // 로그인 버튼 클릭 이벤트 처리
        document.getElementById("loginBtn").addEventListener("click", function () {
            // 팝업창과 어두운 오버레이 표시
            document.getElementById("loginModal").style.display = "block";
            document.getElementById("overlay").style.display = "block";
        });

        // 모달 닫기 버튼 클릭 이벤트 처리
        document.getElementById("closeModalBtn").addEventListener("click", function () {
            // 팝업창과 어두운 오버레이 숨기기
            document.getElementById("loginModal").style.display = "none";
            document.getElementById("overlay").style.display = "none";
        });
    </script>
</header>
